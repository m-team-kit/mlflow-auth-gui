services:
  reverse-proxy:
    command:
      # for some reason extending does *not* merge command, so I'm pasting these here as well
      - "--entrypoints.web.address=:80"
      - "--providers.docker"

      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsEncrypt.acme.storage=/etc/traefik/mounted/acme.json"
      - "--certificatesresolvers.letsEncrypt.acme.email=${LETSENCRYPT_EMAIL}"
      - "--certificatesresolvers.letsEncrypt.acme.tlschallenge=true"
      - "--accesslog=true"
      - "--accesslog.filePath=/var/log/traefik/access.log"
    volumes:
      - ${MLFLOW_BASE_PATH_LOCAL}/traefik/etc/:/etc/traefik/mounted/
      - ${MLFLOW_BASE_PATH_LOCAL}/traefik/log/:/var/log/traefik/
    ports:
      - "443:443"

  mlflow:
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mlflow db upgrade postgresql://${DATABASE_USER}:${DATABASE_PASSWORD}@${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME} && \
        mlflow server \
          --backend-store-uri=postgresql://${DATABASE_USER}:${DATABASE_PASSWORD}@${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME} \
          --artifacts-destination=/mlruns \
          --host=0.0.0.0 \
          --port=5000 \
          --app-name=basic-auth \
          --gunicorn-opts="-t600"
    labels:
      traefik.http.routers.mlflow.tls: true
      traefik.http.routers.mlflow.tls.certResolver: letsEncrypt

  signup:
    labels:
      traefik.http.routers.signup.tls: true
      traefik.http.routers.signup.tls.certResolver: letsEncrypt

  goaccess:
    restart: always
    image: mteamkit/goaccess-service
    volumes:
      - ${MLFLOW_BASE_PATH_LOCAL}/traefik/log/:/var/log/srv-access/
      - ${GOACCESS_ETC_PATH_LOCAL}:/opt/goaccess-etc/
      - ${GOACCESS_OUT_PATH_LOCAL}:/opt/goaccess-out/
    env_file: .env
    networks:
      - mlflow
    labels:
      traefik.http.routers.goaccess.rule: Host(`${DOMAIN}`) && PathPrefix(`/${GOACCESS_WEB_ROUTE}`)
      traefik.http.routers.goaccess.tls: true
      traefik.http.routers.goaccess.tls.certResolver: letsEncrypt
      traefik.http.routers.goaccess.middlewares: auth
      traefik.http.middlewares.auth.basicauth.users: ${GOACCESS_USER}:${GOACCESS_PASSWORD}
